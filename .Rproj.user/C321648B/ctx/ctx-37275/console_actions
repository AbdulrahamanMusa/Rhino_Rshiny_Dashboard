{
    "type": [
        2,
        2,
        0,
        1,
        3,
        2,
        2,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        0,
        1,
        2,
        2,
        3,
        2
    ],
    "data": [
        "\nR version 4.3.2 (2023-10-31 ucrt) -- \"Eye Holes\"\nCopyright (C) 2023 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on ho",
        "w to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n- Project 'C:/Users/Abdulrahaman/Desktop/rhino/dash' loaded. [renv 1.0.3]\n- The project is out-of-sync -- use `renv::status()` for details.\n",
        "> ",
        "shiny::runApp()",
        "Loading required package: shiny\n",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [==] \u001B[32m674.50MB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m",
        "\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Calling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types ",
        "= FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in _fn: attempt to apply non-function\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in _fn: attempt to apply non-function\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in _fn: attempt to apply non-function\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> > ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "Error in box::use(app/main) : \n  names “valueBoxUI2”, “valueBoxServer2” not exported by “app/view/valuebox”\n",
        "> > ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> > ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m1.89GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m1.71GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in accordion_panel: `value` must be a character string\n  95: \u001B[37m<Anonymous>\u001B[39m\n  94: \u001B[37msignalCondition\u001B[39m\n  93: \u001B[37msignal_abort\u001B[39m\n  92: \u001B[37mabort\u001B[39m\n  91: \u001B[37maccordion_panel\u001B[39m\n  70: \u001B[34m\u001B[1mvalueBoxUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#18]\u001B[22m\u001B[39m\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#21]\u001B[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache",
        "/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in accordion_panel: `value` must be a character string\n  95: \u001B[37m<Anonymous>\u001B[39m\n  94: \u001B[37msignalCondition\u001B[39m\n  93: \u001B[37msignal_abort\u001B[39m\n  92: \u001B[37mabort\u001B[39m\n  91: \u001B[37maccordion_panel\u001B[39m\n  70: \u001B[34m\u001B[1mvalueBoxUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#18]\u001B[22m\u001B[39m\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#21]\u001B[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache",
        "/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in accordion_panel: `value` must be a character string\n  95: \u001B[37m<Anonymous>\u001B[39m\n  94: \u001B[37msignalCondition\u001B[39m\n  93: \u001B[37msignal_abort\u001B[39m\n  92: \u001B[37mabort\u001B[39m\n  91: \u001B[37maccordion_panel\u001B[39m\n  70: \u001B[34m\u001B[1mvalueBoxUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#18]\u001B[22m\u001B[39m\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#21]\u001B[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache",
        "/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in accordion_panel: `value` must be a character string\n  93: \u001B[37m<Anonymous>\u001B[39m\n  92: \u001B[37msignalCondition\u001B[39m\n  91: \u001B[37msignal_abort\u001B[39m\n  90: \u001B[37mabort\u001B[39m\n  89: \u001B[37maccordion_panel\u001B[39m\n  70: \u001B[34m\u001B[1mvalueBoxUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#18]\u001B[22m\u001B[39m\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#21]\u001B[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache",
        "/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Navigation containers expect a collection of `bslib::nav_panel()`/`shiny::tabPanel()`s and/or `bslib::nav_menu()`/`shiny::navbarMenu()`s. Consider using `header` or `footer` if you wish to place content above (or below) every panel's contents.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in accordion_panel: `value` must be a character string\n  95: \u001B[37m<Anonymous>\u001B[39m\n  94: \u001B[37msignalCondition\u001B[39m\n  93: \u001B[37msignal_abort\u001B[39m\n  92: \u001B[37mabort\u001B[39m\n  91: \u001B[37maccordion_panel\u001B[39m\n  70: \u001B[34m\u001B[1mvalueBoxUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#18]\u001B[22m\u001B[39m\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#21]\u001B[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache",
        "/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in accordion_panel: `value` must be a character string\n  95: \u001B[37m<Anonymous>\u001B[39m\n  94: \u001B[37msignalCondition\u001B[39m\n  93: \u001B[37msignal_abort\u001B[39m\n  92: \u001B[37mabort\u001B[39m\n  91: \u001B[37maccordion_panel\u001B[39m\n  70: \u001B[34m\u001B[1mvalueBoxUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#18]\u001B[22m\u001B[39m\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#21]\u001B[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache",
        "/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> > ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Navigation containers expect a collection of `bslib::nav_panel()`/`shiny::tabPanel()`s and/or `bslib::nav_menu()`/`shiny::navbarMenu()`s. Consider using `header` or `footer` if you wish to place content above (or below) every panel's contents.\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114:",
        " \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_error\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desk",
        "top\\rhino\\dash\\app\\view\\valuebox.R#48]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#29]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#29]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#29]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#29]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#29]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[3",
        "7mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_error\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#29]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[3",
        "9m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.04GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#29]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in dots_list: \u001B[38;5;232mArgument 5 can't be empty.\u001B[39m\n  109: \u001B[37m<Anonymous>\u001B[39m\n  108: \u001B[37msignalCondition\u001B[39m\n  107: \u001B[37msignal_abort\u001B[39m\n  106: \u001B[37mabort\u001B[39m\n  105: \u001B[37mdots_list\u001B[39m\n  104: \u001B[37mtags$body\u001B[39m\n  100: \u001B[37mpage\u001B[39m\n   99: \u001B[37mpage_fillable\u001B[39m\n   98: \u001B[34m\u001B[1mvalueBoxUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#18]\u001B[22m\u001B[39m\n   62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\m",
        "ain.R#20]\u001B[22m\u001B[39m\n   61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n   60: \u001B[37mui\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#29]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m1.89GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m",
        "\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Calling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types ",
        "= FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#31]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m",
        "\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Calling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types ",
        "= FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#31]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in renderUI: object 'df' not found\n  99: \u001B[37mfilter\u001B[39m\n  98: \u001B[37m%>%\u001B[39m\n  97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#31]\u001B[22m\u001B[39m\n  96: \u001B[37mfunc\u001B[39m\n  83: \u001B[37mrenderFunc\u001B[39m\n  82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#31]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#29]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#29]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> > ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#29]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#29]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#29]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in shiny_module$ui: object 'df' not found\n  83: \u001B[37mhasGroups\u001B[39m\n  82: \u001B[37mchoicesWithNames\u001B[39m\n  81: \u001B[37mselectInput\u001B[39m\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#20]\u001B[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#29]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> > ",
        "shiny::runApp()",
        "Error in box::use(app/main) : \n  C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R:61:43: unexpected '{'\n60: server <- function(id)\n61:   moduleServer(id,input, output, session) {\n                                              ^\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m1.81GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#29]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "Warning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_error\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104",
        ": \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#29]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of jsonlite, this option will not be s",
        "upported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "Warning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_error\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104",
        ": \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#29]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of jsonlite, this option will not be s",
        "upported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "Warning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_error\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104",
        ": \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#31]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of jsonlite, this option will not be s",
        "upported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> > ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m",
        "\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Calling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types ",
        "= FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in module: unused arguments (childScope$output, childScope)\n  44: \u001B[37mforce\u001B[39m\n  43: \u001B[37mdomain$wrapSync\u001B[39m\n  42: \u001B[37mpromises::with_promise_domain\u001B[39m\n  41: \u001B[37mwithReactiveDomain\u001B[39m\n  40: \u001B[37mcallModule\u001B[39m\n  39: \u001B[34m\u001B[1mshiny_module$server [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#63]\u001B[22m\u001B[39m\n  38: \u001B[34m\u001B[1mserver [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a",
        "244d38b136d8392/rhino/as_top_level.R#9]\u001B[22m\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\nError in module(childScope$input, childScope$output, childScope, ...) : \n  unused arguments (childScope$output, childScope)\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m",
        "\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Calling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types ",
        "= FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in module: unused arguments (childScope$output, childScope)\n  44: \u001B[37mforce\u001B[39m\n  43: \u001B[37mdomain$wrapSync\u001B[39m\n  42: \u001B[37mpromises::with_promise_domain\u001B[39m\n  41: \u001B[37mwithReactiveDomain\u001B[39m\n  40: \u001B[37mcallModule\u001B[39m\n  39: \u001B[34m\u001B[1mshiny_module$server [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#63]\u001B[22m\u001B[39m\n  38: \u001B[34m\u001B[1mserver [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a",
        "244d38b136d8392/rhino/as_top_level.R#9]\u001B[22m\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\nError in module(childScope$input, childScope$output, childScope, ...) : \n  unused arguments (childScope$output, childScope)\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in module: unused arguments (childScope$output, childScope)\n  44: \u001B[37mforce\u001B[39m\n  43: \u001B[37mdomain$wrapSync\u001B[39m\n  42: \u001B[37mpromises::with_promise_domain\u001B[39m\n  41: \u001B[37mwithReactiveDomain\u001B[39m\n  40: \u001B[37mcallModule\u001B[39m\n  39: \u001B[34m\u001B[1mshiny_module$server [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#62]\u001B[22m\u001B[39m\n  38: \u001B[34m\u001B[1mserver [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a",
        "244d38b136d8392/rhino/as_top_level.R#9]\u001B[22m\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\nError in module(childScope$input, childScope$output, childScope, ...) : \n  unused arguments (childScope$output, childScope)\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Navigation containers expect a collection of `bslib::nav_panel()`/`shiny::tabPanel()`s and/or `bslib::nav_menu()`/`shiny::navbarMenu()`s. Consider using `header` or `footer` if you wish to place content above (or below) every panel's contents.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in : Navigation containers expect a collection of `bslib::nav_panel()`/`shiny::tabPanel()`s and/or `bslib::nav_menu()`/`shiny::navbarMenu()`s. Consider using `header` or `footer` if you wish to place content above (or below) every panel's contents.\n  77: \u001B[37mstop\u001B[39m\n  76: \u001B[37mFUN\u001B[39m\n  75: \u001B[37mlapply\u001B[39m\n  74: \u001B[37mbuildTabset\u001B[39m\n  73: \u001B[37mnavbarPage_\u001B[39m\n  72: \u001B[37mnavs_bar_\u001B[39m\n  63: \u001B[37mpage_navbar\u001B[39m\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Use",
        "rs\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#21]\u001B[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in : Navigation containers expect a collection of `bslib::nav_panel()`/`shiny::tabPanel()`s and/or `bslib::nav_menu()`/`shiny::navbarMenu()`s. Consider using `header` or `footer` if you wish to place content above (or below) every panel's contents.\n  77: \u001B[37mstop\u001B[39m\n  76: \u001B[37mFUN\u001B[39m\n  75: \u001B[37mlapply\u001B[39m\n  74: \u001B[37mbuildTabset\u001B[39m\n  73: \u001B[37mnavbarPage_\u001B[39m\n  72: \u001B[37mnavs_bar_\u001B[39m\n  63: \u001B[37mpage_navbar\u001B[39m\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Use",
        "rs\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#21]\u001B[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m1.69GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in page_navbar: formal argument \"theme\" matched by multiple actual arguments\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#21]\u001B[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in : Navigation containers expect a collection of `bslib::nav_panel()`/`shiny::tabPanel()`s and/or `bslib::nav_menu()`/`shiny::navbarMenu()`s. Consider using `header` or `footer` if you wish to place content above (or below) every panel's contents.\n  77: \u001B[37mstop\u001B[39m\n  76: \u001B[37mFUN\u001B[39m\n  75: \u001B[37mlapply\u001B[39m\n  74: \u001B[37mbuildTabset\u001B[39m\n  73: \u001B[37mnavbarPage_\u001B[39m\n  72: \u001B[37mnavs_bar_\u001B[39m\n  63: \u001B[37mpage_navbar\u001B[39m\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Use",
        "rs\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#21]\u001B[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in : Navigation containers expect a collection of `bslib::nav_panel()`/`shiny::tabPanel()`s and/or `bslib::nav_menu()`/`shiny::navbarMenu()`s. Consider using `header` or `footer` if you wish to place content above (or below) every panel's contents.\n  77: \u001B[37mstop\u001B[39m\n  76: \u001B[37mFUN\u001B[39m\n  75: \u001B[37mlapply\u001B[39m\n  74: \u001B[37mbuildTabset\u001B[39m\n  73: \u001B[37mnavbarPage_\u001B[39m\n  72: \u001B[37mnavs_bar_\u001B[39m\n  63: \u001B[37mpage_navbar\u001B[39m\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Use",
        "rs\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#21]\u001B[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#49]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in dots_list: \u001B[38;5;232mArgument 5 can't be empty.\u001B[39m\n  73: \u001B[37m<Anonymous>\u001B[39m\n  72: \u001B[37msignalCondition\u001B[39m\n  71: \u001B[37msignal_abort\u001B[39m\n  70: \u001B[37mabort\u001B[39m\n  69: \u001B[37mdots_list\u001B[39m\n  68: \u001B[37mtags$body\u001B[39m\n  64: \u001B[37mpage\u001B[39m\n  63: \u001B[37mpage_fillable\u001B[39m\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#21]\u001B[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64",
        "-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in dots_list: \u001B[38;5;232mArgument 5 can't be empty.\u001B[39m\n  73: \u001B[37m<Anonymous>\u001B[39m\n  72: \u001B[37msignalCondition\u001B[39m\n  71: \u001B[37msignal_abort\u001B[39m\n  70: \u001B[37mabort\u001B[39m\n  69: \u001B[37mdots_list\u001B[39m\n  68: \u001B[37mtags$body\u001B[39m\n  64: \u001B[37mpage\u001B[39m\n  63: \u001B[37mpage_fillable\u001B[39m\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#21]\u001B[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64",
        "-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in dots_list: \u001B[38;5;232mArgument 5 can't be empty.\u001B[39m\n  73: \u001B[37m<Anonymous>\u001B[39m\n  72: \u001B[37msignalCondition\u001B[39m\n  71: \u001B[37msignal_abort\u001B[39m\n  70: \u001B[37mabort\u001B[39m\n  69: \u001B[37mdots_list\u001B[39m\n  68: \u001B[37mtags$body\u001B[39m\n  64: \u001B[37mpage\u001B[39m\n  63: \u001B[37mpage_fillable\u001B[39m\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#21]\u001B[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64",
        "-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> > ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in $: name 'ui' not found in 'shiny_module'\n  63: \u001B[37m$.box$mod\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in $: name 'ui' not found in 'shiny_module'\n  63: \u001B[37m$.box$mod\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m1.76GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#28]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#28]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#28]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m1.20GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#28]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in dots_list: \u001B[38;5;232mArgument 5 can't be empty.\u001B[39m\n  73: \u001B[37m<Anonymous>\u001B[39m\n  72: \u001B[37msignalCondition\u001B[39m\n  71: \u001B[37msignal_abort\u001B[39m\n  70: \u001B[37mabort\u001B[39m\n  69: \u001B[37mdots_list\u001B[39m\n  68: \u001B[37mtags$body\u001B[39m\n  64: \u001B[37mpage\u001B[39m\n  63: \u001B[37mpage_fillable\u001B[39m\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#21]\u001B[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64",
        "-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#28]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#28]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in dots_list: \u001B[38;5;232mArgument 5 can't be empty.\u001B[39m\n  81: \u001B[37m<Anonymous>\u001B[39m\n  80: \u001B[37msignalCondition\u001B[39m\n  79: \u001B[37msignal_abort\u001B[39m\n  78: \u001B[37mabort\u001B[39m\n  77: \u001B[37mdots_list\u001B[39m\n  76: \u001B[37mtags$body\u001B[39m\n  72: \u001B[37mpage\u001B[39m\n  71: \u001B[37mpage_fillable\u001B[39m\n  70: \u001B[34m\u001B[1mvalueBoxUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#18]\u001B[22m\u001B[39m\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#21]\u001B",
        "[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in dots_list: \u001B[38;5;232mArgument 5 can't be empty.\u001B[39m\n  81: \u001B[37m<Anonymous>\u001B[39m\n  80: \u001B[37msignalCondition\u001B[39m\n  79: \u001B[37msignal_abort\u001B[39m\n  78: \u001B[37mabort\u001B[39m\n  77: \u001B[37mdots_list\u001B[39m\n  76: \u001B[37mtags$body\u001B[39m\n  72: \u001B[37mpage\u001B[39m\n  71: \u001B[37mpage_fillable\u001B[39m\n  70: \u001B[34m\u001B[1mvalueBoxUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#18]\u001B[22m\u001B[39m\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#21]\u001B",
        "[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m1.40GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in : Navigation containers expect a collection of `bslib::nav_panel()`/`shiny::tabPanel()`s and/or `bslib::nav_menu()`/`shiny::navbarMenu()`s. Consider using `header` or `footer` if you wish to place content above (or below) every panel's contents.\n  77: \u001B[37mstop\u001B[39m\n  76: \u001B[37mFUN\u001B[39m\n  75: \u001B[37mlapply\u001B[39m\n  74: \u001B[37mbuildTabset\u001B[39m\n  73: \u001B[37mnavbarPage_\u001B[39m\n  72: \u001B[37mnavs_bar_\u001B[39m\n  63: \u001B[37mpage_navbar\u001B[39m\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Use",
        "rs\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#21]\u001B[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in page_navbar: formal argument \"theme\" matched by multiple actual arguments\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#21]\u001B[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in : Navigation containers expect a collection of `bslib::nav_panel()`/`shiny::tabPanel()`s and/or `bslib::nav_menu()`/`shiny::navbarMenu()`s. Consider using `header` or `footer` if you wish to place content above (or below) every panel's contents.\n  77: \u001B[37mstop\u001B[39m\n  76: \u001B[37mFUN\u001B[39m\n  75: \u001B[37mlapply\u001B[39m\n  74: \u001B[37mbuildTabset\u001B[39m\n  73: \u001B[37mnavbarPage_\u001B[39m\n  72: \u001B[37mnavs_bar_\u001B[39m\n  63: \u001B[37mpage_navbar\u001B[39m\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Use",
        "rs\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#21]\u001B[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> > ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in dots_list: \u001B[38;5;232mArgument 5 can't be empty.\u001B[39m\n  92: \u001B[37m<Anonymous>\u001B[39m\n  91: \u001B[37msignalCondition\u001B[39m\n  90: \u001B[37msignal_abort\u001B[39m\n  89: \u001B[37mabort\u001B[39m\n  88: \u001B[37mdots_list\u001B[39m\n  87: \u001B[37mtags$body\u001B[39m\n  83: \u001B[37mpage\u001B[39m\n  82: \u001B[37mpage_fillable\u001B[39m\n  81: \u001B[34m\u001B[1mvalueBoxUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#18]\u001B[22m\u001B[39m\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#21]\u001B",
        "[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#30]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in dots_list: \u001B[38;5;232mArgument 5 can't be empty.\u001B[39m\n  92: \u001B[37m<Anonymous>\u001B[39m\n  91: \u001B[37msignalCondition\u001B[39m\n  90: \u001B[37msignal_abort\u001B[39m\n  89: \u001B[37mabort\u001B[39m\n  88: \u001B[37mdots_list\u001B[39m\n  87: \u001B[37mtags$body\u001B[39m\n  83: \u001B[37mpage\u001B[39m\n  82: \u001B[37mpage_fillable\u001B[39m\n  81: \u001B[34m\u001B[1mvalueBoxUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#18]\u001B[22m\u001B[39m\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#21]\u001B",
        "[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#40]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#40]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#40]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#44]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#44]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#57]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in dots_list: \u001B[38;5;232mArgument 3 can't be empty.\u001B[39m\n  92: \u001B[37m<Anonymous>\u001B[39m\n  91: \u001B[37msignalCondition\u001B[39m\n  90: \u001B[37msignal_abort\u001B[39m\n  89: \u001B[37mabort\u001B[39m\n  88: \u001B[37mdots_list\u001B[39m\n  87: \u001B[37mdiv\u001B[39m\n  84: \u001B[37mshiny::fluidPage\u001B[39m\n  82: \u001B[37mpage_fluid\u001B[39m\n  81: \u001B[34m\u001B[1mvalueBoxUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#18]\u001B[22m\u001B[39m\n  62: \u001B[34m\u001B[1mshiny_module$ui [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\main.R#2",
        "1]\u001B[22m\u001B[39m\n  61: \u001B[34m\u001B[1m_fn [C:/Users/Abdulrahaman/AppData/Local/R/cache/R/renv/cache/v5/R-4.3/x86_64-w64-mingw32/rhino/1.5.0/aec1b2db96151d32a244d38b136d8392/rhino/as_top_level.R#6]\u001B[22m\u001B[39m\n  60: \u001B[37mui\u001B[39m\n   1: \u001B[37mshiny::runApp\u001B[39m\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#43]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\nWarning: Error in filter: \u001B[38;5;232m\u001B[36mℹ\u001B[38;5;232m In argument: `Country ==\n  input$selectedCountry`.\u001B[39m\n\u001B[1mCaused by error:\u001B[22m\n\u001B[38;5;232m\u001B[33m!\u001B[38;5;232m `..1` must be of size 195 or 1, not size 0.\u001B[39m\n  114: \u001B[37m<Anonymous>\u001B[39m\n  113: \u001B[37msignalCondition\u001B[39m\n  112: \u001B[37msignal_abort\u001B[39m\n  111: \u001B[37mabort\u001B[39m\n  110: \u001B[37m<Anonymous>\u001B[39m\n  109: \u001B[37msignalCondition\u001B[39m\n  108: \u001B[37msignal_abort\u001B[39m\n  107: \u001B[37mabort\u001B[39m\n  106: \u001B[37mdplyr_internal_er",
        "ror\u001B[39m\n  105: \u001B[37meval\u001B[39m\n  104: \u001B[37mmask$eval_all_filter\u001B[39m\n  102: \u001B[37mfilter_eval\u001B[39m\n  101: \u001B[37mfilter_rows\u001B[39m\n  100: \u001B[37mfilter.data.frame\u001B[39m\n   99: \u001B[37mfilter\u001B[39m\n   98: \u001B[37m%>%\u001B[39m\n   97: \u001B[34m\u001B[1mrenderUI [C:\\Users\\Abdulrahaman\\Desktop\\rhino\\dash\\app\\view\\valuebox.R#30]\u001B[22m\u001B[39m\n   96: \u001B[37mfunc\u001B[39m\n   83: \u001B[37mrenderFunc\u001B[39m\n   82: \u001B[37moutput$valueBox1-valueBoxes\u001B[39m\n    1: \u001B[37mshiny::runApp\u001B[39m\nInput to asJSON(keep_vec_names=TRUE) is a named vector. In a future version of",
        " jsonlite, this option will not be supported, and named vectors will be translated into arrays instead of objects. If you want JSON object output, please use a named list instead. See ?toJSON.\n\n",
        "> > ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.13GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m1.44GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n\n",
        "> > ",
        "shiny::runApp()",
        "\r\u001B[1mindexing\u001B[0m \u001B[34mworld-data-2023.csv\u001B[0m [====] \u001B[32m2.15GB/s\u001B[0m, eta: \u001B[36m 0s\u001B[0m\r                                                                                         \r\u001B[1mRows: \u001B[22m\u001B[34m195\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m35\u001B[39m\n\u001B[36m──\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36m──────────────────────────────\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (19): Country, Abbreviation, Agricultural Land...\n\u001B[32mdbl\u001B[39m  (9): Birth Rate, Cal",
        "ling Code, Fertility Rate...\n\u001B[32mnum\u001B[39m  (7): Density\n(P/Km2), Land Area(Km2), Armed F...\n\n\u001B[36mℹ\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mℹ\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "\nListening on http://127.0.0.1:7275\n",
        "\nRestarting R session...\n\n"
    ]
}